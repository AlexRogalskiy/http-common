package io.goodforgod.http.common.uri;

import java.util.Map;
import java.util.stream.Stream;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;

/**
 * @author Anton Kurako (GoodforGod)
 * @since 16.02.2022
 */
class URITemplateArgumentsURLTests extends Assertions {

    private static Stream<Arguments> source() {
        return Stream.of(
                Arguments.of("http://example.com/v/{v}/p{?o,m,s}", Map.of("v", "value"), "http://example.com/v/value/p"),
                Arguments.of("http://example.com/v/{v}/p{?o,m,s}", Map.of("v", "value", "o", "val"),
                        "http://example.com/v/value/p?o=val"),
                Arguments.of("http://example.com/v/{v}/p{?o,m,s}", Map.of("v", "value", "m", "val"),
                        "http://example.com/v/value/p?m=val"),
                Arguments.of("http://example.com/v/{v}/p{?o,m,s}", Map.of("v", "value", "s", "val"),
                        "http://example.com/v/value/p?s=val"),
                Arguments.of("http://example.com/v/{v}/p{?o,m,s}", Map.of("v", "value", "o", "val1", "m", "val2", "s", "val3"),
                        "http://example.com/v/value/p?o=val1&m=val2&s=val3"),
                Arguments.of("http://example.com/v/{v}/p{?o,m,s}", Map.of("v", "value", "m", "val2", "s", "val3"),
                        "http://example.com/v/value/p?m=val2&s=val3"),
                Arguments.of("http://example.com/v/{v}/p{?o,m,s}", Map.of("v", "value", "o", "val1", "s", "val3"),
                        "http://example.com/v/value/p?o=val1&s=val3"),
                Arguments.of("http://example.com/v/{v}/p{?o,m,s}", Map.of("v", "value", "o", "val1", "m", "val2"),
                        "http://example.com/v/value/p?o=val1&m=val2"),
                Arguments.of("http://example.com/{var}", Map.of("var", "value"), "http://example.com/value"),
                Arguments.of("http://example.com/{var:20}", Map.of("var", "value"), "http://example.com/value"),
                Arguments.of("http://example.com/{var:3}", Map.of("var", "value"), "http://example.com/val"),
                Arguments.of("http://example.com/{semi}", Map.of("semi", ";"), "http://example.com/%3B"),
                Arguments.of("http://example.com/{semi:2}", Map.of("semi", ";"), "http://example.com/%3B"),
                Arguments.of("http://example.com/{hello}", Map.of("hello", "Hello World!"),
                        "http://example.com/Hello%20World%21"),
                Arguments.of("http://example.com/{half}", Map.of("half", "50%"), "http://example.com/50%25"),
                Arguments.of("http://example.com/O{empty}X", Map.of("empty", ""), "http://example.com/OX"),
                Arguments.of("http://example.com/O{undef}X", Map.of("", ""), "http://example.com/OX"),
                Arguments.of("http://example.com/{x,y}", Map.of("x", 1024, "y", 768), "http://example.com/1024,768"),
                Arguments.of("http://example.com/?{x,empty}", Map.of("x", 1024, "empty", ""), "http://example.com/?1024,"),
                Arguments.of("http://example.com/?{x,undef}", Map.of("x", 1024, "empty", ""), "http://example.com/?1024"),
                Arguments.of("http://example.com/?{undef,y}", Map.of("y", 768), "http://example.com/?768"),
                Arguments.of("http://example.com/map?{x,y}", Map.of("x", 1024, "y", 768), "http://example.com/map?1024,768"),
                Arguments.of("http://example.com/{x,hello,y}", Map.of("x", 1024, "y", 768, "hello", "Hello World!"),
                        "http://example.com/1024,Hello%20World%21,768"),
                Arguments.of("http://example.com/{var:30}", Map.of("var", "value"), "http://example.com/value"),
                Arguments.of("http://example.com/{+var}", Map.of("var", "value"), "http://example.com/value"),
                Arguments.of("http://example.com/{+hello}", Map.of("hello", "Hello World!"), "http://example.com/Hello%20World!"),
                Arguments.of("http://example.com/{+hello}", Map.of("hello", "foo/bar"), "http://example.com/foo/bar"),
                Arguments.of("http://example.com/{+hello}", Map.of("hello", ""), "http://example.com/"),
                Arguments.of("http://example.com/{+half}", Map.of("half", "50%"), "http://example.com/50%25"),
                Arguments.of("http://example.com/{base}index", Map.of("base", "http://example.com/home/"),
                        "http://example.com/http%3A%2F%2Fexample.com%2Fhome%2Findex"),
                Arguments.of("http://example.com/{+base}index", Map.of("base", "http://example.com/home/"),
                        "http://example.com/http://example.com/home/index"),
                Arguments.of("http://example.com/O{+empty}X", Map.of("empty", ""), "http://example.com/OX"),
                Arguments.of("http://example.com/O{+undef}X", Map.of("", ""), "http://example.com/OX"),
                Arguments.of("http://example.com{+path}/here", Map.of("path", "/foo/bar"), "http://example.com/foo/bar/here"),
                Arguments.of("http://example.com/here?ref={+path}", Map.of("path", "/foo/bar"),
                        "http://example.com/here?ref=/foo/bar"),
                Arguments.of("http://example.com/up{+path}{var}/here", Map.of("path", "/foo/bar", "var", "value"),
                        "http://example.com/up/foo/barvalue/here"),
                Arguments.of("http://example.com/{+x,hello,y}", Map.of("x", 1024, "y", 768, "hello", "Hello World!"),
                        "http://example.com/1024,Hello%20World!,768"),
                Arguments.of("http://example.com{+path,x}/here", Map.of("path", "/foo/bar", "x", 1024),
                        "http://example.com/foo/bar,1024/here"),
                Arguments.of("http://example.com{+path:6}/here", Map.of("path", "/foo/bar"), "http://example.com/foo/b/here"),
                Arguments.of("http://example.com/{#var}", Map.of("var", "value"), "http://example.com/#value"),
                Arguments.of("http://example.com/{#hello}", Map.of("hello", "Hello World!"),
                        "http://example.com/#Hello%20World!"),
                Arguments.of("http://example.com/{#half}", Map.of("half", "50%"), "http://example.com/#50%25"),
                Arguments.of("http://example.com/foo{#empty}", Map.of("empty", ""), "http://example.com/foo#"),
                Arguments.of("http://example.com/foo{#undef}", Map.of("", ""), "http://example.com/foo"),
                Arguments.of("http://example.com/X{#var}", Map.of("var", "value"), "http://example.com/X#value"),
                Arguments.of("http://example.com/X{#hello}", Map.of("hello", "Hello World!", "var", "value"),
                        "http://example.com/X#Hello%20World!"),
                Arguments.of("http://example.com/{#x,hello,y}", Map.of("x", 1024, "y", 768, "hello", "Hello World!"),
                        "http://example.com/#1024,Hello%20World!,768"),
                Arguments.of("http://example.com/{#path,x}/here", Map.of("path", "/foo/bar", "x", 1024),
                        "http://example.com/#/foo/bar,1024/here"),
                Arguments.of("http://example.com/{#path:6}/here", Map.of("path", "/foo/bar"), "http://example.com/#/foo/b/here"),
                Arguments.of("http://example.com/X{.var}", Map.of("var", "value"), "http://example.com/X.value"),
                Arguments.of("http://example.com/X{.empty}", Map.of("empty", ""), "http://example.com/X."),
                Arguments.of("http://example.com/X{.undef}", Map.of("", ""), "http://example.com/X"),
                Arguments.of("http://example.com/X{.x,y}", Map.of("x", 1024, "y", 768), "http://example.com/X.1024.768"),
                Arguments.of("http://example.com/{.who}", Map.of("who", "fred"), "http://example.com/.fred"),
                Arguments.of("http://example.com/{.who,who}", Map.of("who", "fred"), "http://example.com/.fred.fred"),
                Arguments.of("http://example.com/{.half,who}", Map.of("half", "50%", "who", "fred"),
                        "http://example.com/.50%25.fred"),
                Arguments.of("http://example.com/X{.var:3}", Map.of("var", "value"), "http://example.com/X.val"),
                Arguments.of("http://example.com{/who}", Map.of("who", "fred"), "http://example.com/fred"),
                Arguments.of("http://example.com{/who,who}", Map.of("who", "fred"), "http://example.com/fred/fred"),
                Arguments.of("http://example.com{/half,who}", Map.of("half", "50%", "who", "fred"),
                        "http://example.com/50%25/fred"),
                Arguments.of("http://example.com{/who,dub}", Map.of("who", "fred", "dub", "me/too"),
                        "http://example.com/fred/me%2Ftoo"),
                Arguments.of("http://example.com{/var}", Map.of("var", "value"), "http://example.com/value"),
                Arguments.of("http://example.com{/var,undef}", Map.of("var", "value"), "http://example.com/value"),
                Arguments.of("http://example.com{/var,empty}", Map.of("var", "value", "empty", ""), "http://example.com/value/"),
                Arguments.of("http://example.com{/var,x}/here", Map.of("var", "value", "x", 1024),
                        "http://example.com/value/1024/here"),
                Arguments.of("http://example.com{/var:1,var}", Map.of("var", "value"), "http://example.com/v/value"),
                Arguments.of("http://example.com/{;who}", Map.of("who", "fred"), "http://example.com/;who=fred"),
                Arguments.of("http://example.com/{;half}", Map.of("half", "50%"), "http://example.com/;half=50%25"),
                Arguments.of("http://example.com/{;empty}", Map.of("empty", ""), "http://example.com/;empty"),
                Arguments.of("http://example.com/{;v,empty,who}", Map.of("v", 6, "empty", "", "who", "fred"),
                        "http://example.com/;v=6;empty;who=fred"),
                Arguments.of("http://example.com/{;v,undef,who}", Map.of("v", 6, "who", "fred"),
                        "http://example.com/;v=6;who=fred"),
                Arguments.of("http://example.com/{;x,y}", Map.of("x", 1024, "y", 768), "http://example.com/;x=1024;y=768"),
                Arguments.of("http://example.com/{;x,y,empty}", Map.of("x", 1024, "y", 768, "empty", ""),
                        "http://example.com/;x=1024;y=768;empty"),
                Arguments.of("http://example.com/{;x,y,undef}", Map.of("x", 1024, "y", 768, "empty", ""),
                        "http://example.com/;x=1024;y=768"),
                Arguments.of("http://example.com/{;hello:5}", Map.of("hello", "Hello World!"), "http://example.com/;hello=Hello"),
                Arguments.of("http://example.com/{?who}", Map.of("who", "fred"), "http://example.com/?who=fred"),
                Arguments.of("http://example.com/{?half}", Map.of("half", "50%"), "http://example.com/?half=50%25"),
                Arguments.of("http://example.com/{?x,y}", Map.of("x", 1024, "y", 768, "empty", ""),
                        "http://example.com/?x=1024&y=768"),
                Arguments.of("http://example.com/{?x,y,empty}", Map.of("x", 1024, "y", 768, "empty", ""),
                        "http://example.com/?x=1024&y=768&empty="),
                Arguments.of("http://example.com/{?x,y,undef}", Map.of("x", 1024, "y", 768, "empty", ""),
                        "http://example.com/?x=1024&y=768"),
                Arguments.of("http://example.com/{?var:3}", Map.of("var", "value"), "http://example.com/?var=val"),
                Arguments.of("http://example.com/?fixed=yes{&x}", Map.of("x", 1024), "http://example.com/?fixed=yes&x=1024"),
                Arguments.of("http://example.com/{&x,y,empty}", Map.of("x", 1024, "y", 768, "empty", ""),
                        "http://example.com/&x=1024&y=768&empty="),
                Arguments.of("http://example.com/{&var:3}", Map.of("var", "value"), "http://example.com/&var=val"),
                Arguments.of("http://example.com/foo{?query,number}", Map.of("query", "mycelium", "number", 100),
                        "http://example.com/foo?query=mycelium&number=100"),
                Arguments.of("http://example.com/foo{?query,number}", Map.of("number", 100),
                        "http://example.com/foo?number=100"));
    }

    @ParameterizedTest
    @MethodSource("source")
    void expandURITemplateWithArgumentsForFullURL(String template, Map<String, Object> params, String expected) {
        URITemplate uriTemplate = new URITemplate(template);
        assertEquals(expected, uriTemplate.expand(params));
    }
}
